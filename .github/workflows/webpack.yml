name: Deploy to Server

on:
  push:
    branches:
      - main  # Sesuaikan dengan branch yang ingin digunakan untuk deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo 'SSH connection successful'"

        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}

- name: Deploy with Docker Compose
  run: |
    ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
      set -e  # Stop jika ada error

      # Ganti dengan direktori tempat project akan disimpan
      PROJECT_DIR="/home/ubuntu/testing

      # Hapus folder lama (opsional, hanya jika ingin bersih)
      rm -rf $PROJECT_DIR

      # Clone ulang repository
      git clone https://github.com/username/repository.git $PROJECT_DIR

      # Masuk ke direktori project
      cd $PROJECT_DIR

      # Jalankan Docker Compose
      docker compose down
      docker compose pull
      dockercompose up -d --build
    EOF

  env:
    SSH_HOST: ${{ secrets.SSH_HOST }}
    SSH_USER: ${{ secrets.SSH_USER }}
